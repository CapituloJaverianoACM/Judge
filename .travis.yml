language: python

python:
  - 3.6

install: pip install  -r requirements/test.txt

services:
  - docker


addons:
  postgresql: "9.6"

stages:
  - test
  - build

env:
  - REGISTRY_URL=$DOCKER_USERNAME/$CI_PROJECT_NAME CI_PROJECT_NAME_CELERY=$CI_PROJECT_NAME/CELERY REGISTRY_URL=$DOCKER_USERNAME/$CI_PROJECT_NAME_CELERY

jobs:
  include:
    - stage: test
      before_script:
        - pip install virtualenv
        - virtualenv .environment
        - source .environment/bin/activate
        - pip install -r requirements/test.txt
        - psql -c "CREATE DATABASE travisci;" -U postgres
      script:
        - flake8 .
        - cd api/
        - python manage.py test --settings=api.settings.test
        - echo $?
    - stage: build
      only:
          refs:
            - dev
      before_script:
        - rm -rf /var/cache/apk/*
      script:
        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
        - docker build -f Dockerfile.prod -t $CI_PROJECT_NAME .
        - docker tag $CI_PROJECT_NAME $REGISTRY_URL:$TRAVIS_PULL_REQUEST_SHA
        - docker tag $REGISTRY_URL:$TRAVIS_PULL_REQUEST_SHA $REGISTRY_URL:latest
        - docker push $REGISTRY_URL
        - echo $?
        - docker build -f DockerfileCelery.prod -t $CI_PROJECT_NAME_CELERY .
        - docker tag $CI_PROJECT_NAME_CELERY $REGISTRY_URL_CELERY:$TRAVIS_PULL_REQUEST_SHA
        - docker tag $REGISTRY_URL_CELERY:$TRAVIS_PULL_REQUEST_SHA $REGISTRY_URL_CELERY:latest
        - docker push $REGISTRY_URL_CELERY
        - echo $?







